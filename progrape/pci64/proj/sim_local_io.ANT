-- C:\CYGWIN\HOME\ADMINISTRATOR\FKIT\PCI64\PROJ
-- VHDL Annotation Test Bench created by
-- HDL Bencher 6.1i
-- Wed Jan 05 04:12:45 2005

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY sim_local_io IS
END sim_local_io;

ARCHITECTURE testbench_arch OF sim_local_io IS
-- If you get a compiler error on the following line,
-- from the menu do Options->Configuration select VHDL 87
FILE RESULTS: TEXT OPEN WRITE_MODE IS "c:\cygwin\home\administrator\fkit\pci64\proj\sim_local_io.ano";
	COMPONENT local_io
		GENERIC (
			NBIT_L_ADRO : INTEGER
		);
		PORT (
			CALC_STS : In  std_logic;
			NPIPE : In  std_logic_vector (7 DOWNTO 0);
			BUSY_LOCAL_READ : Out  std_logic;
			MEM_ADA : In  std_logic_vector (16 DOWNTO 0);
			MEM_WEHA : In  std_logic;
			MEM_WELA : In  std_logic;
			MEM_DTIA : In  std_logic_vector (63 DOWNTO 0);
			DMAW_ENABLE : Out  std_logic_vector (3 DOWNTO 0);
			DMAR_ENABLE : Out  std_logic_vector (3 DOWNTO 0);
			DBUS_Port : Out  std_logic_vector (63 DOWNTO 0);
			DBUS_idata : In  std_logic_vector (63 DOWNTO 0);
			DBUS_HiZ : Out  std_logic;
			MEM_ADB : Out  std_logic_vector (12 DOWNTO 0);
			MEM_WEHB : Out  std_logic;
			MEM_WELB : Out  std_logic;
			MEM_DTIB : Out  std_logic_vector (63 DOWNTO 0);
			MEM_DTOB : In  std_logic_vector (63 DOWNTO 0);
			RST : In  std_logic;
			CLK : In  std_logic
		);
	END COMPONENT;

	SIGNAL CALC_STS : std_logic;
	SIGNAL NPIPE : std_logic_vector (7 DOWNTO 0);
	SIGNAL BUSY_LOCAL_READ : std_logic;
	SIGNAL MEM_ADA : std_logic_vector (16 DOWNTO 0);
	SIGNAL MEM_WEHA : std_logic;
	SIGNAL MEM_WELA : std_logic;
	SIGNAL MEM_DTIA : std_logic_vector (63 DOWNTO 0);
	SIGNAL DMAW_ENABLE : std_logic_vector (3 DOWNTO 0);
	SIGNAL DMAR_ENABLE : std_logic_vector (3 DOWNTO 0);
	SIGNAL DBUS_Port : std_logic_vector (63 DOWNTO 0);
	SIGNAL DBUS_idata : std_logic_vector (63 DOWNTO 0);
	SIGNAL DBUS_HiZ : std_logic;
	SIGNAL MEM_ADB : std_logic_vector (12 DOWNTO 0);
	SIGNAL MEM_WEHB : std_logic;
	SIGNAL MEM_WELB : std_logic;
	SIGNAL MEM_DTIB : std_logic_vector (63 DOWNTO 0);
	SIGNAL MEM_DTOB : std_logic_vector (63 DOWNTO 0);
	SIGNAL RST : std_logic;
	SIGNAL CLK : std_logic;

BEGIN
	UUT : local_io
	GENERIC MAP (
		NBIT_L_ADRO => 3
	)
	PORT MAP (
		CALC_STS => CALC_STS,
		NPIPE => NPIPE,
		BUSY_LOCAL_READ => BUSY_LOCAL_READ,
		MEM_ADA => MEM_ADA,
		MEM_WEHA => MEM_WEHA,
		MEM_WELA => MEM_WELA,
		MEM_DTIA => MEM_DTIA,
		DMAW_ENABLE => DMAW_ENABLE,
		DMAR_ENABLE => DMAR_ENABLE,
		DBUS_Port => DBUS_Port,
		DBUS_idata => DBUS_idata,
		DBUS_HiZ => DBUS_HiZ,
		MEM_ADB => MEM_ADB,
		MEM_WEHB => MEM_WEHB,
		MEM_WELB => MEM_WELB,
		MEM_DTIB => MEM_DTIB,
		MEM_DTOB => MEM_DTOB,
		RST => RST,
		CLK => CLK
	);

	PROCESS -- clock process for CLK,
		VARIABLE TX_TIME : INTEGER :=0;

		PROCEDURE ANNOTATE_DMAW_ENABLE(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",DMAW_ENABLE,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, DMAW_ENABLE);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_DMAR_ENABLE(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",DMAR_ENABLE,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, DMAR_ENABLE);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_DBUS_Port(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",DBUS_Port,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, DBUS_Port);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_DBUS_HiZ(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",DBUS_HiZ,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, DBUS_HiZ);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_MEM_ADB(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",MEM_ADB,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, MEM_ADB);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_MEM_WEHB(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",MEM_WEHB,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, MEM_WEHB);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_MEM_WELB(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",MEM_WELB,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, MEM_WELB);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_MEM_DTIB(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",MEM_DTIB,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, MEM_DTIB);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_BUSY_LOCAL_READ(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			STD.TEXTIO.write(TX_LOC,string'("Annotate["));
			STD.TEXTIO.write(TX_LOC, TX_TIME);
			STD.TEXTIO.write(TX_LOC,string'(",BUSY_LOCAL_READ,"));
			IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, BUSY_LOCAL_READ);
			STD.TEXTIO.write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			STD.TEXTIO.writeline(results, TX_LOC);
			STD.TEXTIO.Deallocate(TX_LOC);
		END;

	BEGIN
		CLOCK_LOOP : LOOP
		CLK <= transport '0';
		WAIT FOR 25 ns;
		TX_TIME := TX_TIME + 25;
		CLK <= transport '1';
		WAIT FOR 25 ns;
		TX_TIME := TX_TIME + 25;
		ANNOTATE_DMAW_ENABLE(TX_TIME);
		ANNOTATE_DMAR_ENABLE(TX_TIME);
		ANNOTATE_DBUS_Port(TX_TIME);
		ANNOTATE_DBUS_HiZ(TX_TIME);
		ANNOTATE_MEM_ADB(TX_TIME);
		ANNOTATE_MEM_WEHB(TX_TIME);
		ANNOTATE_MEM_WELB(TX_TIME);
		ANNOTATE_MEM_DTIB(TX_TIME);
		ANNOTATE_BUSY_LOCAL_READ(TX_TIME);
		WAIT FOR 25 ns;
		TX_TIME := TX_TIME + 25;
		CLK <= transport '0';
		WAIT FOR 25 ns;
		TX_TIME := TX_TIME + 25;
		END LOOP CLOCK_LOOP;
	END PROCESS;

	PROCESS   -- Process for CLK
		VARIABLE TX_OUT : LINE;

		BEGIN
		-- --------------------
		CALC_STS <= transport '0';
		MEM_ADA <= transport std_logic_vector'("00000000000000000"); --0
		MEM_WEHA <= transport '0';
		MEM_WELA <= transport '0';
		MEM_DTIA <= transport std_logic_vector'("0000000000000000000000000000000000000000000000000000000000000000"); --0
		DBUS_idata <= transport std_logic_vector'("0000000000000000000000000000000000000000000000000000000000000000"); --0
		MEM_DTOB <= transport std_logic_vector'("0000000000000000000000000000000000000000000000000000000000000000"); --0
		RST <= transport '0';
		NPIPE <= transport std_logic_vector'("00000010"); --2
		-- --------------------
		WAIT FOR 3400 ns; -- Time=3400 ns
		CALC_STS <= transport '1';
		-- --------------------
		WAIT FOR 13600 ns; -- Time=17000 ns
		CALC_STS <= transport '0';
		-- --------------------
		WAIT FOR 2700 ns; -- Time=19700 ns
		-- --------------------

		STD.TEXTIO.write(TX_OUT, string'("Total[]"));
		STD.TEXTIO.writeline(results, TX_OUT);
		ASSERT (FALSE) REPORT
			"Success! Simulation for annotation completed"
			SEVERITY FAILURE;
	END PROCESS;
END testbench_arch;

CONFIGURATION local_io_cfg OF sim_local_io IS
	FOR testbench_arch
	END FOR;
END local_io_cfg;
